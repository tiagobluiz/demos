plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.playground'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = "2022.0.1"
	testcontainersVersion = "1.17.6"
	postgresqlDriverVersion = "42.5.4"
	commonsIoVersion = "2.11.0"
	flywayVersion = "9.15.2"
	easyRandomCoreVersion = "5.0.0"
	mockitoVersion = "5.2.0"
	hibernateSpatialVersion = "6.1.7.Final"
	mapstructVersion = "1.5.3.Final"
	mapstructLombokBindingVersion = "0.2.0"
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-graphql"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.postgresql:postgresql:${postgresqlDriverVersion}"
	implementation "org.hibernate.orm:hibernate-spatial:${hibernateSpatialVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructLombokBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok"
	implementation "org.flywaydb:flyway-core:${flywayVersion}"
	testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework:spring-webflux"
	testImplementation "org.springframework.graphql:spring-graphql-test"
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation "commons-io:commons-io:${commonsIoVersion}"
	testImplementation "org.jeasy:easy-random-core:${easyRandomCoreVersion}"
	testImplementation "org.mockito:mockito-core:${mockitoVersion}"
	testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
